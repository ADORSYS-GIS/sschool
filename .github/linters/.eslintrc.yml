---
# Global settings
parserOptions:
  project: true
plugins:
  - '@typescript-eslint'
extends:
  - 'next/core-web-vitals'

# Override settings for TypeScript files
overrides:
  - files: ['*.ts', '*.tsx']
    parser: '@typescript-eslint/parser'
    extends:
      - 'plugin:@typescript-eslint/recommended-type-checked'
      - 'plugin:@typescript-eslint/stylistic-type-checked'
    rules:
      semi:
        - error
        - always
      comma-dangle:
        - warn
        - always
      no-extra-semi: off
      react/react-in-jsx-scope: off
      '@typescript-eslint/array-type': off
      '@typescript-eslint/consistent-type-definitions': off
      '@typescript-eslint/consistent-type-imports':
        - warn
        - prefer: type-imports
          fixStyle: inline-type-imports
      '@typescript-eslint/no-unused-vars':
        - warn
        - argsIgnorePattern: '^_'
      '@typescript-eslint/require-await': off
      '@typescript-eslint/no-misused-promises':
        - warn
        - checksVoidReturn:
            attributes: false
      '@typescript-eslint/no-explicit-any': off
      '@typescript-eslint/no-unsafe-assignment': off

    settings:
      import/resolver:
        typescript:
          project: ../../tsconfig.json

  # Override settings for non-TypeScript files
  - files: ['*.js', '*.jsx', '*.json', '*.mjs', '*.cjs', '*.yml', '*.yaml']
    parserOptions:
      ecmaVersion: latest
      sourceType: module
    extends:
      - 'eslint:recommended'
    rules:
      # ðŸš€ Disable all TypeScript rules for these files
      '@typescript-eslint/*': off
