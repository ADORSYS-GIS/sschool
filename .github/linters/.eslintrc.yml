---
# Global settings
parserOptions:
  project: ../../tsconfig.json
  tsconfigRootDir: ../../
plugins:
  - '@typescript-eslint'
extends:
  - 'next/core-web-vitals'

# Override settings for TypeScript files
overrides:
  - files: ['*.ts', '*.tsx']
    parser: '@typescript-eslint/parser'
    extends:
      - 'plugin:@typescript-eslint/recommended-type-checked'
      - 'plugin:@typescript-eslint/stylistic-type-checked'
      - "plugin:@typescript-eslint/recommended"
      - "plugin:@typescript-eslint/recommended-requiring-type-checking"
      - "plugin:@typescript-eslint/strict"
    rules:
      react/react-in-jsx-scope: off
      '@typescript-eslint/array-type': off
      '@typescript-eslint/consistent-type-definitions': off
      '@typescript-eslint/consistent-type-imports':
        - warn
        - prefer: type-imports
          fixStyle: inline-type-imports
      '@typescript-eslint/no-unused-vars':
        - warn
        - argsIgnorePattern: '^_'
      '@typescript-eslint/require-await': off
      '@typescript-eslint/no-misused-promises':
        - warn
        - checksVoidReturn:
            attributes: false
      '@typescript-eslint/no-explicit-any': off
      '@typescript-eslint/no-unsafe-assignment': off
      '@typescript-eslint/no-unused-expressions':
        - error
        - allowShortCircuit: false
      '@typescript-eslint/dot-notation':
        - error
        - allowKeywords: true
      '@typescript-eslint/no-empty-function':
        ['error', { allow: ['arrowFunctions', 'functions', 'methods'] }]

# Common rules for both TypeScript and JavaScript files
settings:
  import/resolver:
    typescript:
      project: ../../tsconfig.json
